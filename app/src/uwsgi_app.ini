# Reference : https://segmentfault.com/q/1010000005143387
[uwsgi]
# Set all env's parameters.
set-placeholder = user_id=@(exec://echo $USER_ID)
set-placeholder = group_id=@(exec://echo $GROUP_ID)
# set-placeholder = socket_path=@(exec://echo $SOCKET_PATH)
# set-placeholder = socket_file=@(exec://echo $SOCKET_FILE)
# set-placeholder = log_dir=@(exec://echo $CONTAINER_LOGFILE_PATH)
set-placeholder = log_dir=/uwsgi_logs
set-placeholder= log_prefix=uwsgi
set-placeholder = py_autoreload=@(exec://echo $PY-AUTORELOAD)

# Use the sock to run this application.
# socket = %(socket_path)/%(socket_file)
socket = /sock/app.sock
uid = root
gid = root


chmod-socket = 666

wsgi-file = app/wsgi.py

chdir = app
module = main
callable = app
py-autoreload = %(py_autoreload) # Reload the code to wait 3 seconds.
master = true
vacuum = true

# maximum number of worker processes
processes = 5
threads = 2

# clear environment as exit this application.
die-on-term = true

reload-mercy = 8

# Use master thread to write log file.
log-master = true
# To create a single thread to write the log, to improve the performance.
threaded-log = true
# set-placeholder = log_num=14
logformat = %(host) %(method) %(uri) %(proto) returning with status %(status), secods: %(secs), %(micros)
# Set all the log files of the uwsgi, '$NODE_NAME' from the docekr envs.
logto = %(log_dir)/%(log_prefix)-@(exec://echo $NODE_NAME)-@(exec://date +%%Y%%m%%d).log
log-reopen = true
# unique-cron = 15 3 -1 -1 -1 { sleep 66 && kill -HUP $(cat %(pidfile)) && ls -tp %(log_dir)/%(log_prefix)* | grep -v '/$' | tail -n +%(log_num)  | xargs -d '\n' -r rm --; } &